---
// Jamie Murray section component for Active Away - Tailwind CSS Version

// Accept homeData as prop (fetched once in index.astro)
interface Props {
  homeData?: any;
}

const { homeData } = Astro.props;

const jamieMurrayData = {
  title: homeData?.jamieMurray?.title || "",
  description: homeData?.jamieMurray?.description || "",
  buttonText: homeData?.jamieMurray?.buttonText || "Learn More",
  videoUrl: homeData?.jamieMurray?.videoUrl || "",
  image: homeData?.jamieMurray?.image || null
};

function extractYouTubeId(url: string) {
  try {
    const parsed = new URL(url);
    if (parsed.hostname.includes('youtu.be')) {
      return parsed.pathname.replace('/', '');
    }
    if (parsed.searchParams.has('v')) {
      return parsed.searchParams.get('v');
    }
    const pathSegments = parsed.pathname.split('/').filter(Boolean);
    if (pathSegments[0] === 'embed' && pathSegments[1]) {
      return pathSegments[1];
    }
  } catch (error) {
    console.warn('Unable to parse YouTube URL', url, error);
  }
  return null;
}

const youTubeId = jamieMurrayData.videoUrl ? extractYouTubeId(jamieMurrayData.videoUrl) : null;
const youTubeThumbnail = youTubeId ? `https://i.ytimg.com/vi/${youTubeId}/hqdefault.jpg` : null;
---

<section class="w-full bg-white py-12 sm:py-16 lg:py-24">
  <!-- Mobile: Full-width video first, then padded content -->
  <!-- Desktop: Side-by-side with container padding -->
  <div class="lg:container lg:mx-auto lg:px-4 sm:lg:px-10">
    <div class="flex flex-col-reverse lg:grid lg:grid-cols-2 gap-8 lg:gap-12 lg:items-center">
      <!-- Content Column -->
      <div class="px-4 sm:px-6 lg:px-0 lg:order-1">
        <h3 class="text-xl sm:text-2xl lg:text-3xl xl:text-4xl font-inter font-semibold text-gray-900 mb-4 sm:mb-6">
          {jamieMurrayData.title}
        </h3>
        
        <p class="text-base sm:text-lg font-inter text-gray-800 leading-relaxed mb-6 sm:mb-8">
          {jamieMurrayData.description}
        </p>
        
        <button class="flex items-center gap-2 bg-gold hover:bg-gold-700 text-white px-6 sm:px-8 py-3 sm:py-4 rounded-full font-inter font-semibold text-base sm:text-lg transition-all duration-300 hover:-translate-y-0.5">
          <span>{jamieMurrayData.buttonText}</span>
          <svg class="w-5 h-5 sm:w-6 sm:h-6" viewBox="0 0 24 24" fill="none">
            <path d="M7 17L17 7M17 7H7M17 7V17" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>

      <!-- Video/Image Column - Full width on mobile, rounded on desktop -->
      <div class="w-full lg:order-2">
        {youTubeId ? (
          <div class="relative w-full aspect-video lg:rounded-2xl overflow-hidden lg:shadow-lg">
            <button 
              type="button"
              class="lite-youtube group"
              data-video-id={youTubeId}
              aria-label="Play Jamie Murray video"
            >
              {youTubeThumbnail && (
                <img 
                  src={youTubeThumbnail}
                  alt="Jamie Murray video thumbnail"
                  loading="lazy"
                  decoding="async"
                  class="absolute inset-0 w-full h-full object-cover"
                />
              )}
              <span class="lite-youtube__play"></span>
            </button>
          </div>
        ) : jamieMurrayData.image ? (
          <div class="relative w-full lg:rounded-2xl overflow-hidden lg:shadow-lg">
            <img 
              src={jamieMurrayData.image.url} 
              alt={jamieMurrayData.image.alt || 'Jamie Murray Tennis Programme'} 
              width={jamieMurrayData.image.width} 
              height={jamieMurrayData.image.height} 
              class="w-full h-auto object-cover" 
              loading="lazy" 
            />
          </div>
        ) : null}
      </div>
    </div>
  </div>
</section>

<style>
  .font-inter {
    font-family: 'Inter', sans-serif;
  }
  .lite-youtube {
    position: relative;
    display: block;
    width: 100%;
    height: 100%;
    background-color: #000;
    cursor: pointer;
    border: none;
    padding: 0;
  }

  .lite-youtube::before {
    content: '';
    display: block;
    padding-top: 56.25%;
  }

  .lite-youtube img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .lite-youtube__play {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 68px;
    height: 48px;
    transform: translate(-50%, -50%);
    background: rgba(33, 33, 33, 0.8);
    border-radius: 14px;
    transition: background 0.3s ease;
  }

  .lite-youtube__play::before {
    content: '';
    position: absolute;
    left: 22px;
    top: 14px;
    border-style: solid;
    border-width: 10px 0 10px 16px;
    border-color: transparent transparent transparent #fff;
  }

  .lite-youtube:hover .lite-youtube__play {
    background: rgba(214, 0, 0, 0.9);
  }
</style>

{youTubeId && (
  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('.lite-youtube').forEach((trigger) => {
        trigger.addEventListener('click', () => {
          const videoId = trigger.getAttribute('data-video-id');
          if (!videoId) return;
          const iframe = document.createElement('iframe');
          iframe.setAttribute('allowfullscreen', '');
          iframe.setAttribute('loading', 'lazy');
          iframe.setAttribute('title', 'Jamie Murray video');
          iframe.setAttribute(
            'src',
            `https://www.youtube-nocookie.com/embed/${videoId}?autoplay=1&rel=0`
          );
          iframe.setAttribute('allow', 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture');
          iframe.style.position = 'absolute';
          iframe.style.inset = '0';
          iframe.style.width = '100%';
          iframe.style.height = '100%';

          const wrapper = document.createElement('div');
          wrapper.style.position = 'relative';
          wrapper.style.width = '100%';
          wrapper.style.height = '100%';
          wrapper.appendChild(iframe);

          trigger.replaceWith(wrapper);
        }, { once: true });
      });
    });
  </script>
)}
