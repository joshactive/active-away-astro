---
// Stories of Hope section component for Active Away - Tailwind CSS Version
import { getImageByName, getResponsiveImageByName, getStrapiImageAttrs } from '../utils/cloudflareImages.js';

// Accept homeData as prop (fetched once in index.astro)
interface Props {
  homeData?: any;
}

const { homeData } = Astro.props;

// Fetch Google reviews
let googleReviews = [];
try {
  const response = await fetch(`${Astro.url.origin}/api/google-reviews.json`);
  if (response.ok) {
    const data = await response.json();
    googleReviews = data.reviews || [];
    console.log('✅ Fetched', googleReviews.length, 'Google reviews');
  } else {
    console.warn('⚠️  Failed to fetch Google reviews, using fallback');
  }
} catch (error) {
  console.error('❌ Error fetching Google reviews:', error);
}

// Limit reviews: 4 for all devices
const buildAvatarAttrs = (imageName, alt = 'Happy customer review') => {
  const attrs = getResponsiveImageByName(imageName, {
    displayWidth: 80,
    displayHeight: 80,
    fit: 'cover',
    alt,
    sizes: '(max-width: 640px) 64px, 80px'
  });

  if (attrs) {
    return attrs;
  }

  const fallbackSrc = getImageByName(imageName, { width: 80, height: 80, fit: 'cover', format: 'auto', quality: 85 });
  return {
    src: fallbackSrc,
    url: fallbackSrc,
    width: 80,
    height: 80,
    alt,
    loading: 'lazy'
  };
};

const allReviews = googleReviews.length > 0 
  ? googleReviews.slice(0, 4)
  : homeData?.stories?.testimonials?.length > 0 
  ? homeData.stories.testimonials.slice(0, 4)
  : [
        {
          id: 1,
          name: "Peter",
          date: "04/11/2025",
          rating: 5,
          text: "It was great when I happened to come across the store's products while browsing the web. My child really loves this toy. He looks so excited...",
          avatar: buildAvatarAttrs('story-1')
        },
        {
          id: 2,
          name: "Peter",
          date: "04/11/2025",
          rating: 5,
          text: "It was great when I happened to come across the store's products while browsing the web. My child really loves this toy. He looks so excited...",
          avatar: buildAvatarAttrs('story-2')
        },
        {
          id: 3,
          name: "Peter",
          date: "04/11/2025",
          rating: 5,
          text: "It was great when I happened to come across the store's products while browsing the web. My child really loves this toy. He looks so excited...",
          avatar: buildAvatarAttrs('story-3')
        },
        {
          id: 4,
          name: "Peter",
          date: "04/11/2025",
          rating: 5,
          text: "It was great when I happened to come across the store's products while browsing the web. My child really loves this toy. He looks so excited...",
          avatar: buildAvatarAttrs('story-4')
        },
        {
          id: 5,
          name: "Peter",
          date: "04/11/2025",
          rating: 5,
          text: "It was great when I happened to come across the store's products while browsing the web. My child really loves this toy. He looks so excited...",
          avatar: buildAvatarAttrs('story-5')
        },
        {
          id: 6,
          name: "Peter",
          date: "04/11/2025",
          rating: 5,
          text: "It was great when I happened to come across the store's products while browsing the web. My child really loves this toy. He looks so excited...",
          avatar: buildAvatarAttrs('story-6')
        },
        {
          id: 4,
          name: "Peter",
          date: "04/11/2025",
          rating: 5,
          text: "It was great when I happened to come across the store's products while browsing the web. My child really loves this toy. He looks so excited...",
          avatar: buildAvatarAttrs('story-4')
        }
      ];

const googleIconImage = homeData?.stories?.googleIcon
  ? getStrapiImageAttrs(homeData.stories.googleIcon, {
      displayWidth: 32,
      displayHeight: 32,
      fit: 'contain',
      alt: 'Google',
      sizes: '32px'
    })
  : (getResponsiveImageByName('google-icon', {
      displayWidth: 32,
      displayHeight: 32,
      fit: 'contain',
      alt: 'Google',
      sizes: '32px'
    }) ?? (() => {
      const fallbackSrc = getImageByName('google-icon', { width: 32, height: 32, fit: 'contain', format: 'auto', quality: 85 });
      return { src: fallbackSrc, url: fallbackSrc, width: 32, height: 32, alt: 'Google', loading: 'lazy' };
    })());

const normalizedReviews = allReviews.map((review, index) => {
  // If avatar already has responsive attrs, keep it
  if (review.avatar?.src || review.avatar?.url) {
    if (review.avatar?.url && !review.avatar.src) {
      const attrs = getStrapiImageAttrs(review.avatar, {
        displayWidth: 80,
        displayHeight: 80,
        fit: 'cover',
        alt: review.avatar.alt || review.name || 'Happy customer review',
        sizes: '(max-width: 640px) 64px, 80px'
      });
      return { ...review, avatar: attrs ?? review.avatar };
    }
    return review;
  }

  return {
    ...review,
    avatar: buildAvatarAttrs(`story-${(index % 6) + 1}`, review.name || 'Happy customer review')
  };
});

const storiesData = {
  title: homeData?.stories?.title || "Stories of Hope",
  subtitle: homeData?.stories?.subtitle || "Real people, real transformation",
  reviews: normalizedReviews,
  googleIcon: googleIconImage
};

// Debug: Log the review count
console.log('Stories Reviews:', storiesData.reviews.length);
---

<section class="w-full bg-white py-12 sm:py-16 lg:py-24">
  <div class="container mx-auto px-4 sm:px-10">
    <!-- Header -->
    <div class="mb-4 sm:mb-5 lg:mb-8">
      <h2 class="text-2xl sm:text-3xl lg:text-4xl font-playfair font-semibold text-gray-900 mb-1 sm:mb-2">
        {storiesData.title}
      </h2>
      <p class="text-base sm:text-lg font-inter text-gray-600">
        {storiesData.subtitle}
      </p>
    </div>

    <!-- Testimonials Grid - All Devices (4 reviews) -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4 lg:gap-6">
      {storiesData.reviews.map((testimonial, index) => (
        <div class="bg-white border border-gray-200 rounded-2xl p-5 sm:p-6 hover:shadow-lg hover:-translate-y-1 transition-all duration-300 relative">
          <!-- Google Logo -->
          <div class="absolute top-4 right-4">
            <img 
              src={storiesData.googleIcon?.src || storiesData.googleIcon?.url} 
              {...(storiesData.googleIcon?.srcset && { srcset: storiesData.googleIcon.srcset })}
              {...(storiesData.googleIcon?.sizes && { sizes: storiesData.googleIcon.sizes })}
              alt={storiesData.googleIcon?.alt || 'Google'} 
              width={storiesData.googleIcon?.width || 32} 
              height={storiesData.googleIcon?.height || 32} 
              class="w-6 h-6 sm:w-8 sm:h-8" 
              loading={storiesData.googleIcon?.loading || 'lazy'} 
            />
          </div>
          
          <!-- User Info (No Avatar) -->
          <div class="mb-4">
            <h4 class="text-base font-inter font-semibold text-gray-900">{testimonial.name}</h4>
            <div class="flex items-center gap-1 mt-1">
              <span class="text-sm font-inter text-gray-600">{testimonial.date}</span>
            </div>
          </div>
          
          <!-- Stars Rating -->
          <div class="flex items-center gap-1 mb-3">
            {Array.from({ length: 5 }).map((_, i) => (
              <svg class={`w-4 h-4 ${i < testimonial.rating ? 'text-yellow-400' : 'text-gray-300'}`} viewBox="0 0 20 20" fill="currentColor">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
              </svg>
            ))}
          </div>
          
          <!-- Review Text -->
          <div>
            <p class="review-text text-sm font-inter text-gray-800 leading-relaxed line-clamp-4" data-review-id={index}>
              {testimonial.text}
            </p>
            <button 
              class="read-more-btn mt-2 text-sm font-inter font-semibold text-[#ad986c] hover:text-[#8a7454] transition-colors hidden"
              data-review-id={index}
              type="button"
            >
              Read more
            </button>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const readMoreButtons = document.querySelectorAll('.read-more-btn');
    
    // Function to check if text is truncated and show/hide button accordingly
    function checkTruncation() {
      readMoreButtons.forEach(button => {
        const reviewId = button.getAttribute('data-review-id');
        const reviewText = document.querySelector(`.review-text[data-review-id="${reviewId}"]`);
        
        if (reviewText) {
          // Check if content is truncated (scrollHeight > clientHeight)
          const isTruncated = reviewText.scrollHeight > reviewText.clientHeight;
          
          if (isTruncated) {
            button.classList.remove('hidden');
          } else {
            button.classList.add('hidden');
          }
        }
      });
    }
    
    // Check on load
    checkTruncation();
    
    // Check on resize (debounced)
    let resizeTimer;
    window.addEventListener('resize', () => {
      clearTimeout(resizeTimer);
      resizeTimer = setTimeout(checkTruncation, 250);
    });
    
    // Handle click to expand/collapse
    readMoreButtons.forEach(button => {
      button.addEventListener('click', () => {
        const reviewId = button.getAttribute('data-review-id');
        const reviewText = document.querySelector(`.review-text[data-review-id="${reviewId}"]`);
        
        if (reviewText.classList.contains('line-clamp-4')) {
          // Expand
          reviewText.classList.remove('line-clamp-4');
          button.textContent = 'Read less';
        } else {
          // Collapse
          reviewText.classList.add('line-clamp-4');
          button.textContent = 'Read more';
        }
      });
    });
  });
</script>

<style>
  .font-inter {
    font-family: 'Inter', sans-serif;
  }
  
  .font-playfair {
    font-family: 'Playfair Display', serif;
  }
</style>
